{{doc-nav}}
<div class="container is-fluid content">
  <p>
    Ember Freestyle is an Ember addon that allows you to quickly create a component explorer for your Ember app.
  </p>
  <p>
    <a href="https://travis-ci.org/chrislopresto/ember-freestyle" title="Travis Build Status"><img src="https://travis-ci.org/chrislopresto/ember-freestyle.svg?branch=master"></a>
    <a href="https://www.npmjs.com/package/ember-freestyle" title="NPM Package Version"><img src="https://badge.fury.io/js/ember-freestyle.svg"></a>
    <a href="https://www.npmjs.com/package/ember-freestyle" title="NPM Download Count"><img src="https://img.shields.io/npm/dt/ember-freestyle.svg"></a>
    <a href="http://emberobserver.com/addons/ember-freestyle" title="Ember Observer Score"><img src="https://emberobserver.com/badges/ember-freestyle.svg"></a>
  </p>
  <hr>

  <h2>Live Demo</h2>

  To see Ember Freestyle in action, visit the {{#link-to 'acceptance'}}live demo{{/link-to}} here. Note: the acceptance tests run against this live demo.

  <h2>Anatomy of a Basic Freestyle Guide</h2>

  <p>
    Here is a simple style guide, where <code>\{{loading-spinner}}</code> is a hypothetical component <strong>in your application</strong>.
  </p>

  <pre><code class="handlebars language-handlebars">
\{{#freestyle-guide title="My Living Style Guide" subtitle="Showcasing My App's Components"}}
  \{{#freestyle-section name="UI Elements"}}
    \{{#freestyle-usage "loading-spinner" title="Loading Spinner"}}
      \{{loading-spinner}}
    \{{/freestyle-usage}}
  \{{/freestyle-section}}
\{{/freestyle-guide}}
  </code></pre>

  <h2>Components</h2>

  <p>Here's a brief rundown of the components Ember Freestyle provides for adding a living style guide in your app:</p>

  <h3>freestyle-guide</h3>

  <p>
    The <code>freestyle-guide</code> component provides the user interface for a style guide. It includes a header section and navigation controls.
  </p>

  <h3>freestyle-usage</h3>

  <p>
    The <code>freestyle-usage</code> component is the workhorse. Wrap your application's components with a
    <code>freestyle-usage</code> component, being sure to provide a unique slug (positional param) as follows:
  </p>

  <pre><code class="handlebars language-handlebars">
\{{#freestyle-usage "globally-unique-slug-1" title="Title To Display In Style Guide"}}
  \{{x-foo propa="aaa" propb="bbb"}}
\{{/freestyle-usage}}
  </code></pre>

  <p>
    The snippet above will render your app's <code>x-foo</code> component as well as a handlebars snippet demonstrating how to use it.
  </p>

  <h3>freestyle-section</h3>

  <p>
    Optionally group your <code>freestyle-usage</code>-wrapped components into sections using the
    <code>freestyle-section</code> component. The <code>freestyle-section</code> component registers
    itself in order to appear in the navigation provided by the <code>freestyle-guide</code> component.
  </p>

  <h3>freestyle-subsection</h3>

  <p>
    Optionally divide your style guide sections into subsections using the <code>freestyle-subsection</code> component.
  </p>

  <pre><code class="handlebars language-handlebars">
\{{#freestyle-guide title="My Living Style Guide" subtitle="Showcasing My App's Components"}}
  \{{#freestyle-section name="Visual Style" as |section|}}
    \{{#section.subsection name="Typography"}}
      \{{#freestyle-usage "visual-style-typography-foo" title="Foo Typography"}}
        \{{x-foo-typography}}
      \{{/freestyle-usage}}
    \{{/section.subsection}}

    \{{#section.subsection name="Colors"}}
      \{{#freestyle-usage "visual-style-colors-fie" title='Fie Colors'}}
        \{{x-fie-colors}}
      \{{/freestyle-usage}}
    \{{/section.subsection}}
  \{{/freestyle-section}}
\{{/freestyle-guide}}
  </code></pre>

  <p>
    The snippet above will create a style guide with one 'Visual Style' section with separate subsections for 'Typography' and
    'Colors'. Your app's <code>x-foo-typography</code> and <code>x-fie-colors</code> components would show up in the appropriate subsections.
  </p>

  <h3>freestyle-collection + freestyle-variant</h3>

  <p>
    Use the <code>freestyle-collection</code> component with nested <code>freestyle-variant</code> components to present multiple versions of
    a component. This is very useful for presenting and testing a component in each state it must handle in your application.
  </p>

  <p>
    By default, variants will be stacked. If you wish to view variants side by side, set the <code>inline</code> property of
    <code>freestyle-collection</code> to true.
  </p>

  <pre><code class="handlebars language-handlebars">
\{{#freestyle-collection title="Foo Component In Every State" defaultKey="with-icon" inline=true as |collection|}}
  \{{#collection.variant key="no-num"}}
    \{{#freestyle-usage "foo-foo-no-num" title="Information"}}
      \{{foo-foo title="Information"}}
    \{{/freestyle-usage}}
  \{{/collection.variant}}

  \{{#collection.variant key="with-num"}}
    \{{#freestyle-usage "foo-foo-people" title="People"}}
      \{{foo-foo title="People" num=55}}
    \{{/freestyle-usage}}
  \{{/collection.variant}}

  \{{#collection.variant key="with-icon"}}
    \{{#freestyle-usage "foo-foo-twitter" title="Twitter"}}
      \{{foo-foo title="Twitter" icon="twitter"}}
    \{{/freestyle-usage}}
  \{{/collection.variant}}
\{{/freestyle-collection}}
  </code></pre>

  <h3>freestyle-note + freestyle-annotation</h3>

  <p>
    <em>TODO:</em> <a href="https://github.com/chrislopresto/ember-freestyle/issues/61">Simplify Technique for Including Notes</a>
  </p>

  <p>
    Use the <code>freestyle-note</code> component to add a markdown note for a specific <code>freestyle-usage</code>. Note that the
    <code>freestyle-note</code> slug must match the <code>freestyle-usage</code> slug followed by <code>--notes</code>.
  </p>

  <pre><code class="handlebars language-handlebars">
\{{#freestyle-usage "globally-unique-slug-2" title="Title To Display In Style Guide"}}
  \{{x-foo propa="aaa" propb="bbb"}}
\{{/freestyle-usage}}
\{{#freestyle-note "globally-unique-slug-2--notes"}}
  # Contextual Markdown Note for x-foo

  You can write helpful _markdown_ notes explaining how the
  `x-foo` component works.
\{{/freestyle-note}}
  </code></pre>

  <p>
    Use the <code>freestyle-annotation</code> component to add a general purpose note.
  </p>

  <pre><code class="handlebars language-handlebars">
\{{#freestyle-annotation}}
&lt;h1&gt;Contextual HTML Note for Anything in the Freestyle Guide&lt;/h1&gt;

&lt;p&gt;
  You can write helpful HTML notes explaining anything in the
  Freestyle guide.
&lt;/p&gt;
\{{/freestyle-annotation}}
  </code></pre>

  <p>
    Both the <code>freestyle-note</code> and <code>freestyle-annotation</code> components respect the
    <code>Show Notes</code> usage controls preference.
  </p>

  <h2>Adding SASS and Javascript code snippets to Your Freestyle Guide</h2>

  <p>
    To add a SASS or Javascript code snippet wrap the snippet you want to display in a comment block with a unique identifier
  </p>

  <pre><code class="javascript language-javascript">
// BEGIN-FREESTYLE-USAGE my-js-snippet
function do(something) {
  console.log(`Doing ${something}`);
}
// END-FREESTYLE-USAGE
  </code></pre>

  <pre><code class="scss language-scss hljs">
// BEGIN-FREESTYLE-USAGE my-sass-variables
$some-variable: #aaa000;
$some-variable: #aaa000;
$some-variable: #aaa000;
// END-FREESTYLE-USAGE
  </code></pre>

  <p>
    Then use the <code>freestyle-usage</code> component to display it in your Freestyle Guide.
  </p>
  <pre><code class="handlebars language-handlebars">
\{{freestyle-usage "my-js-snippet" title="Title To Display In Style Guide"}}
\{{freestyle-usage "my-sass-variables" title="Title To Display In Style Guide"}}
  </code></pre>

  <h2>Removing Ember Freestyle from Your Production Payload</h2>

  <p>
    We recommend blacklisting Ember Freestyle for production builds using Ember CLI's
    <a href="https://ember-cli.com/user-guide/#whitelisting-and-blacklisting-assets">addon blacklist feature</a>.
  </p>

  <pre><code class="javascript language-javascript">
var environment = process.env.EMBER_ENV;
var pluginsToBlacklist = environment === 'production' ? ['ember-freestyle'] : [];

module.exports = function(defaults) {
  var app = new EmberApp(defaults, {
    addons: {
      blacklist: pluginsToBlacklist
    }
  };
}
  </code></pre>

  <h2>Living Style Guide Driven Development</h2>

  <p>
    Ember Freestyle facilitates a living style guide driven development approach for Ember apps. Chris LoPresto gave a talk on
    this topic at EmberConf 2016. <a href="http://chrislopresto.com/presentations/living-style-guide-driven-development?ph=900&pw=1600">Interactive Slides</a>
  </p>

  <iframe width="560" height="315" src="https://www.youtube.com/embed/Z1lL_Zo62h0" frameborder="0" allowfullscreen></iframe>

  <h2>Acknowledgements</h2>

  <p>
    Ember Freestyle would not be possible without inspiration from the Ember community at large. Specific thanks go out to:
  </p>

  <ul>
    <li>
      <a href="https://github.com/lukemelia">Luke Melia</a> and <a href="https://github.com/yapplabs">Yapp Labs</a> for underlying
      concepts and addonification
    </li>
    <li>
      <a href="https://github.com/ef4/ember-code-snippet">Ember Code Snippet</a> for the snippet extraction technique
    </li>
  </ul>

  <h2>Getting Started</h2>

  <h3>Installation</h3>

  <p>
    This installation process is opinionated in order to get you going quickly. We want to make everything much easier to use
    in the near future. Please report any problems, and as always, PRs are welcome.
  </p>

  <h3>Installing Ember Freestyle</h3>

  <pre><code class="language-sh">
ember install ember-freestyle
  </code></pre>

  <p>This will do the following:</p>

  <ul>
    <li>Install the <code>ember-freestyle</code> addon itself</li>
    <li>Add a <code>freestyle</code> template in your app</li>
    <li>Add a <code>freestyle</code> controller in your app</li>
  </ul>

  <p><em>Note:</em> Ember CLI versions before 0.2.3 should use <code>ember install:addon</code> instead of <code>ember install</code></p>

  <h3>Setup</h3>

  <h4>Routing the Generated Freestyle Guide</h4>

  <p>If you said yes to the prompts from the generator above, you are almost ready to display a Freestyle Guide in your app.</p>

  <ol>
    <li>Add <code>this.route('freestyle');</code> to your <code>router.js</code> file</li>
    <li>Navigate to <code>/freestyle</code>.</li>
  </ol>

  <p><em>Note:</em> Ember Freestyle is compatible with two trailing Ember LTS releases.</p>
</div>
